/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontEnd;

/**
 *
 * @author sommo
 */
import backEnd.dbAdmin;
import java.sql.*;
import java.time.LocalDate;
import javax.swing.table.DefaultTableModel;
public class applicationList extends javax.swing.JFrame {

    /**
     * Creates new form applicationList
     */
    public applicationList() {
        initComponents();
    }
    ResultSet prs;
    public applicationList(ResultSet rs) {
        prs=rs;
        initComponents();
        try{
            DefaultTableModel tb=(DefaultTableModel) tbl.getModel();
            dbAdmin ob =new dbAdmin();
            String sql="SELECT x.m_id,x.b_id,y.count,x.type FROM application AS x INNER JOIN book AS y ON x.b_id= y.id ORDER BY x.type DESC";
            rs = ob.getResultSet(sql, "member");
            eraseList(tb);
            showList(rs,tb);

        }catch(Exception e){
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    public void eraseList(DefaultTableModel ob){
        //System.out.println("enter");
//        table1.getRowCount();
        try{
            //DefaultTableModel ob = (DefaultTableModel) tb1.getModel();
            while(ob.getRowCount()>0){
                ob.removeRow(0);
            }
        }catch(Exception e){
            
        }
          
    }
    
    public void showList(ResultSet rs,DefaultTableModel ob) {
        try {
//            rs.previous();
            //System.out.println("rnter in show");
            //System.out.println(rs.getString("id"));
            do{
                //System.out.println(rs.getString("id"));
                String arr[] = {rs.getString("x.m_id"), rs.getString("x.b_id"), rs.getString("y.count"), rs.getString("x.type")};
                //DefaultTableModel ob = (DefaultTableModel) tb1.getModel();
                ob.addRow(arr);
            }while (rs.next());
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        l1 = new javax.swing.JLabel();
        l2 = new javax.swing.JLabel();
        l3 = new javax.swing.JLabel();
        l4 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "M_ID", "BOOK", "COUNT", "TYPE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl);
        if (tbl.getColumnModel().getColumnCount() > 0) {
            tbl.getColumnModel().getColumn(0).setResizable(false);
            tbl.getColumnModel().getColumn(1).setResizable(false);
            tbl.getColumnModel().getColumn(2).setResizable(false);
            tbl.getColumnModel().getColumn(3).setResizable(false);
        }

        jButton1.setText("APPROVED");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("DECLINE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("MEMBER ID:");

        jLabel2.setText("BOOK ID:");

        jLabel3.setText("COUNT:");

        jLabel4.setText("TYPE:");

        l1.setText("#####");

        l2.setText("#####");

        l3.setText("#####");

        l4.setText("#####");

        jButton3.setText("CLEAR ALL");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("BACK");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setText("APPLICATION LIST");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel2))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(l2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(l1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(68, 68, 68)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(l4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(l3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton4)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jButton3)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton2))))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jLabel5)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel5)
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(l1)
                    .addComponent(l3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(l2)
                    .addComponent(l4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addGap(13, 13, 13))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMouseClicked
        // TODO add your handling code here:
        l1.setText(tbl.getValueAt(tbl.getSelectedRow(), 0).toString());
        l2.setText(tbl.getValueAt(tbl.getSelectedRow(), 1).toString());
        l3.setText(tbl.getValueAt(tbl.getSelectedRow(), 2).toString());
        l4.setText(tbl.getValueAt(tbl.getSelectedRow(), 3).toString());
    }//GEN-LAST:event_tblMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        l1.setText("#####");
        l2.setText("#####");
        l3.setText("#####");
        l4.setText("#####");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //System.out.println(LocalDate.now());
        try{
            dbAdmin ob =new dbAdmin();
            String sql="select book_id from member where id = '"+l1.getText()+"'";
            ResultSet rs = ob.getResultSet(sql, "member");
            if(l4.getText().equals("w")){
                sql="UPDATE `library_p`.`member` SET `book_id` = NULL, `date` = NULL WHERE (`id` = '"+l1.getText()+"')";
                ob.updateData(sql);
                int n=Integer.parseInt(l3.getText()) ;
                n++;
                sql="UPDATE `book` SET `count` = '"+Integer.toString(n)+"' WHERE (`id` = '"+l2.getText()+"')";
                ob.updateData(sql);
            }else{
                //System.out.println("in else part "+rs.getRow());
                //System.out.println(rs.getString("book_id"));
                if(!(l3.getText().equals("0")))
                {
                    if(rs.getString("book_id")==null){
                        //System.out.println("hi 00");
                        System.out.println(LocalDate.now().toString());
                        sql="UPDATE member SET `book_id` = '"+l2.getText()+"',`date`='"+LocalDate.now().toString()+"' where id = '"+l1.getText()+"'";
                        System.out.println(sql);
                        ob.updateData(sql);
                        int n=Integer.parseInt(l3.getText()) ;
                        n--;
                        sql="UPDATE `book` SET `count` = '"+Integer.toString(n)+"' WHERE (`id` = '"+l2.getText()+"')";
                        ob.updateData(sql);

                    }
                }
            }
            /*UPDATE `library_p`.`member` SET `book_id` = 'K102', `date` = '2023-05-08' WHERE (`id` = 'C101');*/
            //ob.updateData(sql);
            //System.out.println("hi 1");
            sql="DELETE FROM application WHERE m_id = '"+l1.getText()+"' and type = '"+l4.getText()+"'";
            ob.updateData(sql);
            System.out.println("hi 2");
            sql="SELECT x.m_id,x.b_id,y.count,x.type FROM application AS x INNER JOIN book AS y ON x.b_id= y.id ORDER BY x.type DESC";
            rs = ob.getResultSet(sql, "member");
            System.out.println("hi 3");
            l1.setText("#####");
            l2.setText("#####");
            l3.setText("#####");
            l4.setText("#####");
            //System.out.println(rs.getString("book_id"));
            DefaultTableModel tb=(DefaultTableModel) tbl.getModel();
            eraseList(tb);
            showList(rs,tb);
        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:      
        this.hide();
        adminPage ob =new adminPage(prs);
        ob.show();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try{
            dbAdmin ob =new dbAdmin();
            String sql="DELETE FROM application WHERE m_id = '"+l1.getText()+"' and type = '"+l4.getText()+"'";
            ob.updateData(sql);
            System.out.println("hi 2");
            sql="SELECT x.m_id,x.b_id,y.count,x.type FROM application AS x INNER JOIN book AS y ON x.b_id= y.id ORDER BY x.type DWSC";
            ResultSet rs = ob.getResultSet(sql, "member");
            System.out.println("hi 3");
            //System.out.println(rs.getString("book_id"));
            DefaultTableModel tb=(DefaultTableModel) tbl.getModel();
            eraseList(tb);
            showList(rs,tb);
        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(applicationList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(applicationList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(applicationList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(applicationList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new applicationList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel l1;
    private javax.swing.JLabel l2;
    private javax.swing.JLabel l3;
    private javax.swing.JLabel l4;
    private javax.swing.JTable tbl;
    // End of variables declaration//GEN-END:variables
}
